<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFluent.Components.Styles">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="-2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                                  Focusable="False" 
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Margin="{TemplateBinding Padding}" 
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundPointerOver}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderBrushPointerOver}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundPressed}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderBrushPressed}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderBrushDisabled}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToggleButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ToggleButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToggleButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ToggleButtonBorderThemeThickness}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                                  Focusable="False" 
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Margin="{TemplateBinding Padding}" 
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundPointerOver}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushPointerOver}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundPressed}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushPressed}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushDisabled}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundDisabled}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundChecked}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushChecked}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundChecked}"/>
                        </Trigger>

                        <MultiTrigger x:Name="CheckedPointerOver">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundCheckedPointerOver}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushCheckedPointerOver}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundCheckedPointerOver}"/>
                        </MultiTrigger>

                        <MultiTrigger x:Name="CheckedPressed">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundCheckedPressed}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushCheckedPressed}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundCheckedPressed}"/>
                        </MultiTrigger>

                        <MultiTrigger x:Name="CheckedDisabled">
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonBackgroundCheckedDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonBorderBrushCheckedDisabled}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButtonForegroundCheckedDisabled}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitchStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ToggleSwitchContentForeground}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="MinWidth" Value="154"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition MaxWidth="12" Width="12"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>


                            <Grid x:Name="SwitchAreaGrid" Background="{StaticResource ToggleSwitchContainerBackground}" Grid.ColumnSpan="3" Margin="0,5" Grid.RowSpan="3" Grid.Row="1"/>

                            <ContentPresenter x:Name="contentPresenter" Grid.Column="2" Grid.RowSpan="3" Grid.Row="1"
                                                  Focusable="False" 
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Margin="{TemplateBinding Padding}" 
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Rectangle x:Name="OuterBorder" Fill="{StaticResource ToggleSwitchFillOff}" Height="20" RadiusX="10" RadiusY="10" Grid.Row="2" StrokeThickness="2" Stroke="{StaticResource ToggleSwitchStrokeOff}" Width="44"/>
                            <Rectangle x:Name="SwitchKnobBounds" Fill="{StaticResource ToggleSwitchFillOn}" Height="20" Opacity="0" RadiusX="10" RadiusY="10" Grid.Row="2" StrokeThickness="{StaticResource ToggleSwitchOnStrokeThickness}" Stroke="{StaticResource ToggleSwitchStrokeOn}" Width="44"/>
                            <Grid x:Name="SwitchKnob" HorizontalAlignment="Left" Height="20" Grid.Row="2" Width="20">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="KnobTranslateTransform"/>
                                </Grid.RenderTransform>
                                <Ellipse x:Name="SwitchKnobOn" Fill="{StaticResource ToggleSwitchKnobFillOn}" Height="10" Opacity="0" Width="10"/>
                                <Ellipse x:Name="SwitchKnobOff" Fill="{StaticResource ToggleSwitchKnobFillOff}" Height="10" Width="10"/>
                            </Grid>
                            <Thumb x:Name="SwitchThumb" Grid.ColumnSpan="3" Grid.RowSpan="3" Grid.Row="1">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Rectangle Fill="Transparent"/>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>

                            <Rectangle Fill="#01FFFFFF" Grid.RowSpan="100" Grid.ColumnSpan="100" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource ToggleSwitchStrokeOffPointerOver}"/>
                            <Setter TargetName="OuterBorder" Property="Fill" Value="{StaticResource ToggleSwitchFillOffPointerOver}"/>
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{StaticResource ToggleSwitchKnobFillOffPointerOver}"/>
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{StaticResource ToggleSwitchKnobFillOnPointerOver}"/>
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{StaticResource ToggleSwitchFillOnPointerOver}"/>
                            <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{StaticResource ToggleSwitchStrokeOnPointerOver}"/>
                            <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{StaticResource ToggleSwitchContainerBackgroundPointerOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="OuterBorder" Property="StrokeThickness" Value="0"/>
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource ToggleSwitchStrokeOffPressed}"/>
                            <Setter TargetName="OuterBorder" Property="Fill" Value="{StaticResource ToggleSwitchFillOffPressed}"/>
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{StaticResource ToggleSwitchKnobFillOffPressed}"/>
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{StaticResource ToggleSwitchKnobFillOnPressed}"/>
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{StaticResource ToggleSwitchFillOnPressed}"/>
                            <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{StaticResource ToggleSwitchStrokeOnPressed}"/>
                            <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{StaticResource ToggleSwitchContainerBackgroundPressed}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SwitchKnobBounds" Property="Opacity" Value="1"/>
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="0"/>
                            <Setter TargetName="SwitchKnobOn" Property="Opacity" Value="1"/>
                            <Setter TargetName="SwitchKnobOff" Property="Opacity" Value="0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="OuterBorder" Property="StrokeThickness" Value="0"/>
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource ToggleSwitchStrokeOffDisabled}"/>
                            <Setter TargetName="OuterBorder" Property="Fill" Value="{StaticResource ToggleSwitchFillOffDisabled}"/>
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{StaticResource ToggleSwitchKnobFillOffDisabled}"/>
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{StaticResource ToggleSwitchKnobFillOnDisabled}"/>
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{StaticResource ToggleSwitchFillOnDisabled}"/>
                            <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{StaticResource ToggleSwitchStrokeOnDisabled}"/>
                            <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{StaticResource ToggleSwitchContainerBackgroundDisabled}"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="24" Duration="00:00:00.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="0" Duration="00:00:00.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundUnchecked}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrushUnchecked}"/>
        <Setter Property="Foreground" Value="{StaticResource CheckBoxForegroundUnchecked}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,5,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="1" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>